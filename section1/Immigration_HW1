Table data;
Table datafull;

void setup() {
  size(1280, 720, P3D) ;
  //loadData("continents.csv");
  loadData("simpleData.csv");
}

void draw() {
  background(0);
  randomSeed(0);
  renderData(data);
}

void loadData(String url) {
  data = loadTable(url);
} 

void renderData(Table t) {
    float continentId = 1;
    float maxContinents = 5;
    
  for (int i = 0; i < t.getRowCount(); i++) {
    TableRow row = t.getRow(i);
    
    //Country - string, name of the country
    String country = row.getString(0);
    //Estimate - int, number of immigrants from this country in the USA
    //range appears to be 5000 to 50M
    int estimate = row.getInt(1);
    int error = row.getInt(2);
    
    String category = row.getString(3);
    String countryColor = row.getString(8);
    String isCountry = row.getString(7);
    
    color black = color(0, 0, 0, 50);
    color red = color(255, 0, 0, 100);
    color green = color(0, 255, 0, 100);
    color blue = color(130, 180, 230, 100);
    color purple = color(255, 0, 255, 100);
    color orange = color(255, 204, 0, 100);
    
    float textColor = black;
    color circleColor = black;
    
    if (countryColor.equals("RED")){
      circleColor = red;
    } else if (countryColor.equals("ORANGE")){
      circleColor = orange;
    } else if (countryColor.equals("GREEN")){
      circleColor = green;
    } else if (countryColor.equals("BLUE")){
      circleColor = blue;
    } else if (countryColor.equals("PURPLE")){
      circleColor = purple;
    }

    //float x = random(width);
    if (category.equals("Continent")){
      float margin = 150;
      
      //float x = map(i, 0, t.getRowCount(), 0 + margin, width - margin);
      
      //float x = map(continentId, 0, maxContinents, 0 + 40, width - 50);
    float x = 0;
    
    // hard code continet position
    if (country.equals("AMERICAS")){
      x = 205;
    } else if (country.equals("ASIA")){
      x = 550;
    } else if (country.equals("EUROPE")){
      x = 800;
    } else if (country.equals("AFRICA")){
      x = 1000;
    } else if (country.equals("OCEANIA")){
      x = 1150;
    }
      
      
      continentId = continentId + 1;
      
      //float y = map(estimate, 1000, 25000000, 0, height);
      //float y = random(height);
      float y = (float) height /2 + 200;
      
      float minSize = 4;
      float maxSize = 140;
      
      float size = map(sqrt(estimate), sqrt(5000), sqrt(5000000), minSize, maxSize);
      //float col = map(estimate, 5000, 5000000, 0, 255);
      
      
      fill(circleColor);
      noStroke();
      ellipse(x,y,size,size);
  
      float fontSize = 12;
      textSize(fontSize);
      
      fill(textColor);
      textAlign(CENTER);
      text(country, x, y);
      
    //} else if (category.equals("Eastern Europe")){
    } else if (!isCountry.equals("")) {  
      
      float margin = 150;
      
      //float x = map(i, 0, t.getRowCount(), 0 + margin, width - margin);
      //float x = random(width - 50);
      
      //float y = map(estimate, 1000, 25000000, 0, height);
      //float y = random(height);
      //float y = (float) height /2 - 100;
      
      float minSize = 5;
      float maxSize = 150;
      
      float size = map(sqrt(estimate), sqrt(5000), sqrt(5000000), minSize, maxSize);
      //float col = map(estimate, 5000, 5000000, 0, 255);

      
      float lattitude = row.getFloat(5);
      float longitude = row.getFloat(6);
      
      if ( !Float.isNaN(lattitude) && !Float.isNaN(longitude)  ) {
        float x = map(longitude, -90, 90, 0 + margin, width - margin);
        float y = map(-lattitude, -90, 90, 0, height - margin - 50);

      
        fill(circleColor);
        noStroke();
        ellipse(x,y,size,size);
    
        //float fontSize = 20;
        //textSize(fontSize);
      }
      //fill(255,textColor,0,100);
      //text(country, x-20, y);
    } 
  }
}
